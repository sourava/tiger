basePath: /api
definitions:
  github_com_sourava_tiger_business_auth_request.LoginRequest:
    properties:
      email:
        example: user@gmail.com
        type: string
      password:
        example: password
        type: string
    type: object
  github_com_sourava_tiger_business_auth_response.LoginHandlerResponse:
    properties:
      payload:
        $ref: '#/definitions/github_com_sourava_tiger_business_auth_response.LoginResponse'
      success:
        example: true
        type: boolean
    type: object
  github_com_sourava_tiger_business_auth_response.LoginResponse:
    properties:
      token:
        example: jwt.token
        type: string
    type: object
  github_com_sourava_tiger_business_tiger_response.ListAllTigersHandlerResponse:
    properties:
      payload:
        $ref: '#/definitions/github_com_sourava_tiger_business_tiger_response.ListAllTigersResponse'
      success:
        example: true
        type: boolean
    type: object
  github_com_sourava_tiger_business_tiger_response.ListAllTigersResponse:
    properties:
      tigers:
        items:
          $ref: '#/definitions/github_com_sourava_tiger_business_tiger_response.TigerResponse'
        type: array
    type: object
  github_com_sourava_tiger_business_tiger_response.TigerResponse:
    properties:
      Last_seen_longitude:
        example: 10.2
        type: number
      date_of_birth:
        example: "2020-01-13"
        type: string
      id:
        example: 1
        type: integer
      last_seen_latitude:
        example: 1.1
        type: number
      last_seen_timestamp:
        example: 1691354650
        type: integer
      name:
        example: tiger name
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  github_com_sourava_tiger_business_user_request.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  github_com_sourava_tiger_business_user_response.CreateUserHandlerResponse:
    properties:
      payload:
        $ref: '#/definitions/github_com_sourava_tiger_business_user_response.CreateUserResponse'
      success:
        example: true
        type: boolean
    type: object
  github_com_sourava_tiger_business_user_response.CreateUserResponse:
    properties:
      email:
        example: user@gmail.com
        type: string
      id:
        example: 1
        type: integer
      username:
        example: username
        type: string
    type: object
  github_com_sourava_tiger_external_utils.HandlerErrorResponse:
    properties:
      error:
        example: Something went wrong
        type: string
      success:
        example: false
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  title: Tigerhall Kittens API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: provides token if email password combination is correct
      parameters:
      - description: login request body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_sourava_tiger_business_auth_request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_business_auth_response.LoginHandlerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
      summary: login api
  /tigers:
    get:
      consumes:
      - application/json
      description: returns all tigers sorted by last time the tiger was seen.
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_business_tiger_response.ListAllTigersHandlerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
      summary: list all tigers api
  /tigers/:tigerID/sightings:
    get:
      consumes:
      - application/json
      description: returns all sightings for a tiger sorted by date.
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: pageSize
        required: true
        type: integer
      - description: Tiger ID
        in: path
        name: tigerID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_business_tiger_response.ListAllTigersHandlerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
      summary: list all tiger sightings api
  /users:
    post:
      consumes:
      - application/json
      description: creates a user.
      parameters:
      - description: token received in login api response
        in: header
        name: Authorization
        required: true
        type: string
      - description: create user request body params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_sourava_tiger_business_user_request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_business_user_response.CreateUserHandlerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse'
      summary: create user api
schemes:
- http
swagger: "2.0"
