// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "provides token if email password combination is correct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "login api",
                "parameters": [
                    {
                        "description": "login request body params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_sourava_tiger_business_auth_request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_sourava_tiger_business_auth_response.LoginHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_sourava_tiger_external_utils.HandlerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_sourava_tiger_business_auth_request.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "github_com_sourava_tiger_business_auth_response.LoginHandlerResponse": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/github_com_sourava_tiger_business_auth_response.LoginResponse"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "github_com_sourava_tiger_business_auth_response.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "jwt.token"
                }
            }
        },
        "github_com_sourava_tiger_external_utils.HandlerErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Something went wrong"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Tigerhall Kittens API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
