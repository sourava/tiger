// Code generated by MockGen. DO NOT EDIT.
// Source: sendgrid.go

// Package sendgrid is a generated GoMock package.
package sendgrid

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSendgridApi is a mock of SendgridApi interface.
type MockSendgridApi struct {
	ctrl     *gomock.Controller
	recorder *MockSendgridApiMockRecorder
}

// MockSendgridApiMockRecorder is the mock recorder for MockSendgridApi.
type MockSendgridApiMockRecorder struct {
	mock *MockSendgridApi
}

// NewMockSendgridApi creates a new mock instance.
func NewMockSendgridApi(ctrl *gomock.Controller) *MockSendgridApi {
	mock := &MockSendgridApi{ctrl: ctrl}
	mock.recorder = &MockSendgridApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendgridApi) EXPECT() *MockSendgridApiMockRecorder {
	return m.recorder
}

// SendEmail mocks base method.
func (m *MockSendgridApi) SendEmail(request *SendEmailRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendEmail", request)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockSendgridApiMockRecorder) SendEmail(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockSendgridApi)(nil).SendEmail), request)
}
